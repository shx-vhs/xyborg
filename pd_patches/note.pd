#N canvas 365 1158 1280 747 12;
#X obj 41 153 mtof;
#X obj 41 177 phasor~;
#X obj 41 225 tabread4~ waveform;
#X obj 42 201 *~ 1604;
#X obj 39 466 outlet~;
#X obj 39 400 *~;
#X obj 144 332 sig~;
#X obj 143 265 inlet;
#X obj 144 295 tgl 19 0 empty empty empty 0 -10 0 12 #fcfcfc #000000 #000000 0 1;
#X obj 44 29 inlet;
#X obj 144 365 else/asr~ 10 150;
#X obj 39 435 *~ 0.9;
#X text 301 52 This synthesis method is an effective way to generate frequency-rich signals without being computationally heavy. The idea is adapted from the pure data FLOSS manual at https://www.archive.flossmanuals.net/pure-data/audio-tutorials/generating-waveforms.html;
#X text 303 19 Sound synthesis object.;
#X text 303 147 MIDI note value to frequency in Hz;
#X text 302 167 phasor~ generate an audio ramp from 0 to 1 and gets multiplied by the length of the table;
#X text 300 225 Playback of the waveform array as an audio signal;
#X text 300 261 Envelope trigger inlet. receive either 0 or 1;
#X text 302 358 Else envelope object. Attack time: 10ms Release time: 150ms;
#X text 302 436 Amplitude correction;
#X connect 0 0 1 0;
#X connect 1 0 3 0;
#X connect 2 0 5 0;
#X connect 3 0 2 0;
#X connect 5 0 11 0;
#X connect 6 0 10 0;
#X connect 7 0 8 0;
#X connect 8 0 6 0;
#X connect 9 0 0 0;
#X connect 10 0 5 1;
#X connect 11 0 4 0;
